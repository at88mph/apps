<!--
************************************************************************
*******************  CANADIAN ASTRONOMY DATA CENTRE  *******************
**************  CENTRE CANADIEN DE DONNÉES ASTRONOMIQUES  **************
*
*  (c) 2009.                            (c) 2009.
*  Government of Canada                 Gouvernement du Canada
*  National Research Council            Conseil national de recherches
*  Ottawa, Canada, K1A 0R6              Ottawa, Canada, K1A 0R6
*  All rights reserved                  Tous droits réservés
*                                       
*  NRC disclaims any warranties,        Le CNRC dénie toute garantie
*  expressed, implied, or               énoncée, implicite ou légale,
*  statutory, of any kind with          de quelque nature que ce
*  respect to the software,             soit, concernant le logiciel,
*  including without limitation         y compris sans restriction
*  any warranty of merchantability      toute garantie de valeur
*  or fitness for a particular          marchande ou de pertinence
*  purpose. NRC shall not be            pour un usage particulier.
*  liable in any event for any          Le CNRC ne pourra en aucun cas
*  damages, whether direct or           être tenu responsable de tout
*  indirect, special or general,        dommage, direct ou indirect,
*  consequential or incidental,         particulier ou général,
*  arising from the use of the          accessoire ou fortuit, résultant
*  software.  Neither the name          de l'utilisation du logiciel. Ni
*  of the National Research             le nom du Conseil National de
*  Council of Canada nor the            Recherches du Canada ni les noms
*  names of its contributors may        de ses  participants ne peuvent
*  be used to endorse or promote        être utilisés pour approuver ou
*  products derived from this           promouvoir les produits dérivés
*  software without specific prior      de ce logiciel sans autorisation
*  written permission.                  préalable et particulière
*                                       par écrit.
*                                       
*  This file is part of the             Ce fichier fait partie du projet
*  OpenCADC project.                    OpenCADC.
*                                       
*  OpenCADC is free software:           OpenCADC est un logiciel libre ;
*  you can redistribute it and/or       vous pouvez le redistribuer ou le
*  modify it under the terms of         modifier suivant les termes de
*  the GNU Affero General Public        la “GNU Affero General Public
*  License as published by the          License” telle que publiée
*  Free Software Foundation,            par la Free Software Foundation
*  either version 3 of the              : soit la version 3 de cette
*  License, or (at your option)         licence, soit (à votre gré)
*  any later version.                   toute version ultérieure.
*                                       
*  OpenCADC is distributed in the       OpenCADC est distribué
*  hope that it will be useful,         dans l’espoir qu’il vous
*  but WITHOUT ANY WARRANTY;            sera utile, mais SANS AUCUNE
*  without even the implied             GARANTIE : sans même la garantie
*  warranty of MERCHANTABILITY          implicite de COMMERCIALISABILITÉ
*  or FITNESS FOR A PARTICULAR          ni d’ADÉQUATION À UN OBJECTIF
*  PURPOSE.  See the GNU Affero         PARTICULIER. Consultez la Licence
*  General Public License for           Générale Publique GNU Affero
*  more details.                        pour plus de détails.
*                                       
*  You should have received             Vous devriez avoir reçu une
*  a copy of the GNU Affero             copie de la Licence Générale
*  General Public License along         Publique GNU Affero avec
*  with OpenCADC.  If not, see          OpenCADC ; si ce n’est
*  <http://www.gnu.org/licenses/>.      pas le cas, consultez :
*                                       <http://www.gnu.org/licenses/>.
*
*  $Revision: 4 $
*
************************************************************************
-->


<!DOCTYPE project>
<project default="build" basedir=".">
    <property environment="env" />
    <property file="local.build.properties" />

    <!-- site-specific build properties or overrides of values in opencadc.properties -->
    <property file="${env.CADC_PREFIX}/etc/local.properties" />

    <!-- site-specific targets, e.g. install, cannot duplicate those in opencadc.targets.xml -->
    <import file="${env.CADC_PREFIX}/etc/local.targets.xml" optional="true" />

    <!-- default properties and targets -->
    <property file="${env.CADC_PREFIX}/etc/opencadc.properties" />
    <import file="${env.CADC_PREFIX}/etc/opencadc.targets.xml"/>

    <!-- developer convenience: place for extra targets and properties -->
    <import file="extras.xml" optional="true" />

    <!-- developer convenience: override properties locally -->

<property name="project" value="cadcDownloadManager" />

<property name="jars" value="${lib}/cadcUtil.jar:${lib}/cadcRegistryClient.jar:${ext.lib}/servlet-api.jar:${ext.lib}/log4j.jar" />

<target name="build" depends="client,servlet,resources" />

<target name="client" depends="compile">
    <jar jarfile="${build}/lib/${project}Client.jar"
        basedir="${build}/class"
        update="no">
                <exclude name="**/server/**" />
                <exclude name="**/test/**" />
    </jar>
</target>

<target name="servlet" depends="compile">
    <jar jarfile="${build}/lib/${project}Server.jar"
		basedir="${build}/class" 
		update="no">
            <exclude name="**/client/**" />
            <exclude name="**/test/**" />
    </jar>
    
</target>

<target name="resources" depends="init">
    <copy todir="${build}/resources/${project}">
        <fileset dir="src/jsp">
            <include name="**.jsp" />
        </fileset>
        <fileset dir="src/resources">
            <include name="**" />
        </fileset>
    </copy>
</target>

<!-- optional/example target to build a vanilla warfile  -->
<target name="signclient" depends="client">
    <!-- client-side jars: for real use these must be signed so the copy
             must be replaced with a jarsigner task instead -->
    <copy file="${lib}/cadcUtil.jar" todir="${build}/tmp" />
    <copy file="${build}/lib/cadcDownloadManagerClient.jar" todir="${build}/tmp" />
    <copy file="${ext.lib}/log4j.jar" todir="${build}/tmp" />
</target>

<target name="warfile" depends="build,signclient">
    <war warfile="${build}/webapps/downloadManager.war" webxml="src/xml/web.xml" update="no">

        <!-- see above: signed client jars in $build/tmp -->
        <fileset dir="${build}/tmp">
            <include name="**.jar" />
        </fileset>

        <!-- add resources -->
        <fileset dir="${build}/resources/${project}/">
            <include name="**.jsp" />
            <include name="**.html" />
        </fileset>

        <!-- server-side jars -->
        <lib dir="${build}/lib">
            <include name="cadcDownloadManagerServer.jar" />
        </lib>
        <lib dir="${lib}">
            <include name="cadcLog.jar" />
            <include name="cadcUtil.jar" />
        </lib>
        <lib dir="${ext.lib}">
            <include name="jstl.jar" />
            <include name="standard.jar" />
            <include name="log4j.jar" />
        </lib>
        <webinf dir="${ext.lib}/tld">
            <include name="c.tld" />
        </webinf>
    </war>
</target>

    <property name="testingJars" value="${jars}:${ext.dev}/junit.jar" />
    
    <target name="test" depends="compile-test">
        <copy todir="${build}/test/class">
            <fileset dir="test/src/resources">
                <include name="**.properties" />
            </fileset>
        </copy>
        <junit printsummary="yes" haltonfailure="yes" fork="yes">
          <classpath>
              <pathelement path="${build}/class"/>
              <pathelement path="${build}/test/class"/>
              <pathelement path="${jars}:${testingJars}"/>
          </classpath>
          <formatter type="plain" usefile="false"/>
          <test name="ca.nrc.cadc.dlm.IteratorTest"/>
          <test name="ca.nrc.cadc.dlm.ManifestReaderTest"/>
        </junit>

    </target>

    <target name="awt-test" depends="build">
        <java classname="junit.extensions.abbot.ScriptTestSuite">
            <classpath>
                <pathelement path="${build}/class"/>
                <pathelement path="${build}/test/class"/>
                <pathelement path="${jars}:${testingJars}"/>
                <pathelement path="${ext.lib}/xerces.jar" />
            </classpath>
            <arg value="test/gui/DLM.xml" />
        </java>
    </target>
</project>
